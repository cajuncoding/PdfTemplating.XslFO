<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net48</TargetFramework>
		<RootNamespace>PdfTemplating.XslFO.Razor.AspNetMvc</RootNamespace>
		<Authors>BBernard / CajunCoding</Authors>
		<Company>CajunCoding.com</Company>
		<Description>This is a C#.Net solution that provides the capability to easily generate PDF documents with a templating approach using Razor MVC templates; as opposed to extremely complex code based approaches most libraries provide. It's based on the Xsl-FO standard for rendering robust paged media outputs as PDF Documents.</Description>
		<Version>3.0.0</Version>
		<Copyright>Copyright © 2020</Copyright>
		<PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
		<PackageProjectUrl>https://github.com/cajuncoding/PdfTemplating.XslFO</PackageProjectUrl>
		<RepositoryUrl>https://github.com/cajuncoding/PdfTemplating.XslFO</RepositoryUrl>
		<PackageTags>adobe acrobat pdf template razor xslt xslfo xsl-fo xsl fo portrait landscape fluid width apache fop apache-fop formatting objects itext itextsharp pdfsharp evopdf ironpdf spire freespire expertpdf</PackageTags>
		<PackageReleaseNotes>
			- Updated to sync with new v3.0 Common and new v3 due to breaking changes.
			- Code cleanup and simplifcation; small breaking change to no longer need Generic type.

			Prior Release Notes:
			- Simplified and streamlined/optimized some code as related to synergies with the new AspNetCore implementation; but all changes should remain backwards compatible with some Deprecation for future removal.
			- Migrated project to new SDK style project.
			- Dropped version of Asp.NET MVC required to improve compatibility.
			- v2.1.1 Some small breaking changes to enable support for new ApacheFOP.Serverless features including easy GZIP request payloads, and viewing of ApachFOP Event Log entries from the response headers (with support GZIP headers if event log is large).
			Prior Release Notes: - v2.0 Upgrade for PdfTemplating with AspNetMvc Razor Templates.
			- Contains Breaking changes to now fully decouple the Templeting from Rendering execution and to support ApacheFOP.Serverless (updated ApacheFOP Pdf Service approach) as well as legacy FONet (old in-memory engine).
		</PackageReleaseNotes>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="Microsoft.AspNet.Mvc" Version="5.0.0" />
	</ItemGroup>
	<ItemGroup>
		<ProjectReference Include="..\PdfTemplating.Common\PdfTemplating.XslFO.Common.csproj" />
	</ItemGroup>
	<ItemGroup>
	  <Reference Include="System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
	  <Reference Include="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
	</ItemGroup>

</Project>