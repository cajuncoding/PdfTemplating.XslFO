<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{86678DEA-1DA7-4478-989A-05087A7A0158}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>PdfTemplating.XslFO.Razor.AspNetMvc</RootNamespace>
    <AssemblyName>PdfTemplating.XslFO.Razor.AspNetMvc</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <Deterministic>true</Deterministic>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
    <!-- *************************************************************************************************************** -->
    <!-- *************************************************************************************************************** -->
    <!-- NUGET PACKAGE PROPERTIES -->
    <!-- More Details Here: https://docs.microsoft.com/en-us/nuget/reference/msbuild-targets#pack-target -->
    <!-- *************************************************************************************************************** -->
    <PackageVersion>2.1.1</PackageVersion>
    <Authors>BBernard / CajunCoding</Authors>
    <!-- NOT SUPPORTED: <Owners>BBernard / CajunCoding</Owners> -->
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/cajuncoding/PdfTemplating.XslFO</PackageProjectUrl>
    <RepositoryUrl>https://github.com/cajuncoding/PdfTemplating.XslFO</RepositoryUrl>
    <Description>This is a C#.Net solution that provides the capability to easily generate Pdf files with a templating approach using Razor Mvc templates; as opposed to extremely complex code based approaches most libraries provide. It's based on the Xsl-FO standard for rendering robust paged media outputs as PDF Documents.</Description>
    <PackageReleaseNotes> - v2.1.1 Some small breaking changes to enable support for new ApacheFOP.Serverless features including easy GZIP request payloads, and viewing of ApachFOP Event Log entries from the response headers (with support GZIP headers if event log is large).
			Prior Release Notes: - v2.0 Upgrade for PdfTemplating with AspNetMvc Razor Templates.
			- Contains Breaking changes to now fully decouple the Templeting from Rendering execution and to support ApacheFOP.Serverless (updated ApacheFOP Pdf Service approach) as well as legacy FONet (old in-memory engine).
		</PackageReleaseNotes>
    <Copyright>Copyright © 2020</Copyright>
    <Tags>adobe acrobat pdf template razor xslt xslfo xsl-fo xsl fo portrait landscape fluid width apache fop apache-fop formatting objects itext itextsharp pdfsharp evopdf ironpdf spire freespire expertpdf</Tags>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'PublishToNuget|AnyCPU'">
    <OutputPath>bin\PublishToNuget\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <LangVersion>7.3</LangVersion>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>
  <ItemGroup>
    <!-- *************************************************************************************************************** -->
    <!-- *************************************************************************************************************** -->
    <!-- NUGET PACKAGE REFERENCES -->
    <!-- More Details Here:  -->
    <!-- *************************************************************************************************************** -->
    <PackageReference Include="Microsoft.AspNet.Mvc" Version="5.2.3" />
    <PackageReference Include="Microsoft.AspNet.Razor" Version="3.2.7" />
    <PackageReference Include="Microsoft.AspNet.WebPages" Version="3.2.7" />
    <PackageReference Include="Microsoft.Web.Infrastructure" Version="1.0.0.0" />
    <PackageReference Include="NuGet.Build.Tasks.Pack" Version="5.11.0">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <!-- ... -->
  </ItemGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Web" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="BackwardsCompatibleShims\AspNetMvcRazorPdfTemplatingRenderer.cs" />
    <Compile Include="BackwardsCompatibleShims\AspNetMvcRazorViewRenderer.cs" />
    <Compile Include="BaseRazorPdfTemplate.cs" />
    <Compile Include="MvcRazorViewRenderer.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\PdfTemplating.Common\PdfTemplating.XslFO.Common.csproj">
      <Project>{cf96dce8-a93d-4d9a-a909-fca0be90b12b}</Project>
      <Name>PdfTemplating.XslFO.Common</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="..\packages\NuGet.Build.Tasks.Pack.5.9.0\build\NuGet.Build.Tasks.Pack.targets" Condition="Exists('..\packages\NuGet.Build.Tasks.Pack.5.9.0\build\NuGet.Build.Tasks.Pack.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\NuGet.Build.Tasks.Pack.5.9.0\build\NuGet.Build.Tasks.Pack.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\NuGet.Build.Tasks.Pack.5.9.0\build\NuGet.Build.Tasks.Pack.targets'))" />
  </Target>
  <Target Name="PackNuget" AfterTargets="AfterBuild" Condition="'$(Configuration)' == 'PublishToNuget'">
    <!-- Swap out nuget for dotnet and update the cli args -->
    <!-- Might actually be able to leave out the csproj path, since this target should run in the project directory. Test it first. -->
    <Exec Command="dotnet pack &quot;$(MSBuildProjectDirectory)\$(PackageId).csproj&quot; --no-build -o bin -c Release" />
    <!-- If you want to copy to a local feed -->
    <!-- <ItemGroup> -->
    <!-- <NugetPackages Include="$(MSBuildProjectDirectory)\bin\$(PackageId).$(PackageVersion)*.nupkg"/> -->
    <!-- </ItemGroup> -->
    <!-- <Copy SourceFiles="@(NugetPackages)" DestinationFolder="path to local feed" /> -->
  </Target>
</Project>