<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>netstandard2.0;net48;net60</TargetFrameworks>
		<Authors>BBernard / CajunCoding</Authors>
		<Company>CajunCoding</Company>
		<Description>This is a C#.Net solution that provides the capability to easily render PDF documents with a templating approach using your choice of templating technology (e.g. Xslt, Razor Mvc templates, or custom) and the latest version of ApacheFOP.Serverless (PDF-as-a-Service) for binary rendering. It's based on the Xsl-FO standard for robust paged media generation and ApacheFOP.Serverless is a separate project that enables the easy use of the latest version of Apache FOP as a PDF Rendering Service using Azure Functions.</Description>
		<Version>3.0.0</Version>
		<Copyright>Copyright Â© 2020</Copyright>
		<PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
		<PackageProjectUrl>https://github.com/cajuncoding/PdfTemplating.XslFO</PackageProjectUrl>
		<PackageTags>adobe acrobat pdf template razor xslt xslfo xsl-fo xsl fo portrait landscape fluid width apache fop apache-fop formatting objects itext itextsharp pdfsharp evopdf ironpdf spire freespire expertpdf</PackageTags>
		<PackageReleaseNotes>
			- Updated to sync with new v3.0 Common and new v3 due to breaking changes.
			- Refactored Interfaces to better support Dependency Injection; some small breaking changes to method signatures.
			- Refactored all Http requests to now use Flurl.Http instead of RESTSharp -- simplified code and improved reliability and future stability.

      Prior Release Notes:
			- Fixed potential dependency resolving issues by Targeting Netstandard 2.0 and now also .NET Framework 4.8.
			- Bumped RESTSharp &amp; dependency versions due to security vulnerability warnings.
			- Added support for REST Request Timeout configuration, and Async cancellation; backwards compatible.
			- Fixed some public setters to be protected and fixed 'Async' naming covention (only breaking if you don't use the constructor params and/or subclass the ApacheFOPServerlessPdfRenderService).
			- Changed EventLog Delimieter in Header to improve parsing reliability without loosing too much readability (from ';' to '||').
			- Initial package release for simplified facade to easily render XslFO as PDF binary outputs via ApacheFOP.Serverless.
		</PackageReleaseNotes>
		<RepositoryUrl>https://github.com/cajuncoding/PdfTemplating.XslFO</RepositoryUrl>
		<Configurations>Debug;Release</Configurations>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<PlatformTarget>AnyCPU</PlatformTarget>
	</PropertyGroup>

	<ItemGroup>
		<None Include="..\LICENSE" Link="LICENSE" />
		<None Include="..\README.md" Link="README.md" />
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Include="Flurl.Http" Version="3.2.4" />
	  <PackageReference Include="Microsoft.AspNetCore.WebUtilities" Version="2.2.0" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\PdfTemplating.Common\PdfTemplating.XslFO.Common.csproj" />
	</ItemGroup>

</Project>
